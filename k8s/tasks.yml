apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasks-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tasks
  template:
    metadata:
      labels:
        app: tasks
    spec:
      containers:
        - name: tasks-api
          image: gagandeep39/k8s-node-eks-tasks-api:latest
          env:
            - name: MONGO_USERNAME
              value: gagan
            - name: MONGO_PASSWORD
              value: '123456'
            - name: MONGO_URI
              value: mongo-srv.default
            - name: AUTH_API_ADDRESS
              value: 'auth-service.default:3000'
          resources:
            limits:
              memory: '128Mi'
              cpu: '150m'
---
apiVersion: v1
kind: Service
metadata:
  name: tasks-service
spec:
  selector:
    app: tasks
  type: LoadBalancer
  ports:
    - protocol: TCP
      # In AWS port can be 80, as it creates a load balancer with different hostname
      # In local it must be anything other than 80
      # If 80 in locahost, then request will always fail either user-service or task service as the host name is same
      port: 3000
      targetPort: 3000
